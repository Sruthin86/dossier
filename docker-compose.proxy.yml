---
services:
  traefik:
    image: traefik:latest
    # Add the swarm provider
    command:
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      # Exposing docker containers
      # When set to false containers that don't have traefik enabled
      # are removed from routing configuration
      - "--providers.swarm.exposedbydefault=false"
      # Watch for docker events
      - "--providers.swarm.watch=true"
      # Sets the the network for the docker provider
      # Traefik will only discover the services in connected to this network
      - "--providers.swarm.network=proxy"
      # Enable the traefik API
      - "--api.insecure=true"
      # Enable the traefik dashboard
      - "--api.dashboard=true"
      # Entrypoints
      # Enable web entry point and redirect to websecure
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=web"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=http"
      # Enable websecure entry point
      - "--entrypoints.websecure.address=:443"
      # Load certs from the host
      - "--providers.file.directory=/etc/traefik/conf.d"
      # Enable log level
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.format=json"
      - "--accesslog.filepath=/etc/traefik/access.log"

    ports:
      - published: 80
        target: 80
        protocol: tcp
        # host mode is used to bind the port to the host network
        # These ports are accessible from outside the host
        # using ip or DNS entries
        mode: host
      - published: 8080
        target: 8080
        protocol: tcp
        mode: host
      - published: 443
        target: 443
        protocol: tcp
        mode: host"
    volumes:
      # map the docker socker so traefik can monitor
      # the changes in the docker socket
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount the traefic dir which has the certs and the conf file
      # - /etc/traefik/:/etc/traefik/
      # Add a volume for traefik logs
      # TODO
    deploy:
      mode: global
      placement:
        max_replicas_per_node: 1
      update_config:
        failure_action: rollback
      restart_policy:
        window: 15s
    networks:
      - proxy

# create a docker external network so traefik
# can communicate with other services
networks:
  proxy:
    external: true
    driver: overlay

